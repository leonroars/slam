
# docker-compose.production.yml - 의존성 대기 로직 추가
services:
  application:
    container_name: concert_reservation_app
    # 로컬 빌드 사용 (최신 이미지 미푸시 대응)
    build:
      context: .
      dockerfile: Dockerfile
    # image: julian247dev/slam-concert-reservation-app:latest  # 주석 처리
    expose:
      - "8080"
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/mydatabase
      - SPRING_DATASOURCE_USERNAME=myuser
      - SPRING_DATASOURCE_PASSWORD=secret
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    # 애플리케이션 시작 지연 및 재시작 정책
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
    # 헬스체크 추가
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - app-network

  mysql:
    image: 'mysql:latest'
    environment:
      - 'MYSQL_DATABASE=mydatabase'
      - 'MYSQL_PASSWORD=secret'
      - 'MYSQL_ROOT_PASSWORD=verysecret'
      - 'MYSQL_USER=myuser'
    volumes:
      - './mock-data:/var/lib/mysql-files'
      - 'mysql_data:/var/lib/mysql'
    ports:
      - "3306:3306"
    # MySQL 헬스체크 추가
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pverysecret"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - app-network

  redis:
    image: docker.io/bitnami/redis:7.4
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - '6379:6379'
    volumes:
      - 'redis_data:/bitnami/redis/data'
    networks:
      - app-network

volumes:
  redis_data:
    driver: local
  mysql_data:
    driver: local

networks:
  app-network:
    driver: bridge