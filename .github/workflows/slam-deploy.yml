name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    # AWS 자격증명 설정
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
    
    # ECR 로그인
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    
    # Docker 이미지 빌드 및 푸시
    - name: Build and push Docker image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: slam/slam-server
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    # GitHub Actions 워크플로우 임시 수정
    - name: Debug Info
      run: |
          echo "Attempting to connect to: ${{ secrets.EC2_HOST }}"
          echo "Username: ${{ secrets.EC2_USERNAME }}"
    
    - name: Direct SSH Test (diagnostic)
      env:
        HOST: ${{ secrets.EC2_HOST }}         # EIP
        USERNAME: ${{ secrets.EC2_USERNAME }} # ubuntu or ec2-user
        SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        SSH_PORT: ${{ secrets.EC2_SSH_PORT || 22 }}
      run: |
        set -euo pipefail
        mkdir -p ~/.ssh
        printf "%s" "$SSH_KEY" > ~/.ssh/key.pem
        chmod 600 ~/.ssh/key.pem

        echo "== nc scan =="
        timeout 10s bash -c "command -v nc >/dev/null && nc -vz -w 5 $HOST $SSH_PORT" || echo "nc not available or port closed"

        echo "== ssh -vvv =="
        ssh -vvv -4 -o ConnectTimeout=15 -o StrictHostKeyChecking=no -p "$SSH_PORT" -i ~/.ssh/key.pem "$USERNAME@$HOST" "echo 'Connected'; whoami; uname -a"

    # EC2 배포
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ secrets.ECR_URI }}
          cd ~/app/slam
          docker pull ${{ secrets.ECR_URI }}:latest
          docker-compose -f docker-compose.prod.yml down
          docker-compose -f docker-compose.prod.yml up -d
          sleep 30
          docker ps
          curl -f http://localhost:8080/actuator/health || exit 1
